{"ast":null,"code":"var _jsxFileName = \"/Users/maccheesebook/Documents/SlyTech/notes/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/arrow-left.svg\"; // import notes from '../assets/data'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  let params = useParams();\n  let noteId = parseInt(params.noteId, 10);\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]); // let note = notes.find(note => note.id === noteId)\n\n  let getNote = async () => {\n    let response = await fetch(`http://127.0.0.1:5000/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let updateNote = async () => {\n    await fetch(`http://127.0.0.1:5000/notes/${noteId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...note,\n        'updated': new Date()\n      })\n    });\n  };\n\n  let handleSubmit = () => {\n    updateNote();\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotePage, \"GyecKfmZuiEQj7DMlhNIJEsUGEg=\", false, function () {\n  return [useParams];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["/Users/maccheesebook/Documents/SlyTech/notes/src/pages/NotePage.js"],"names":["React","useState","useEffect","Link","useParams","NotePage","match","history","params","noteId","parseInt","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","Date","handleSubmit","push","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;4GAEA;;;;AAEA,MAAMC,QAAQ,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAuB;AACrC,MAAIC,MAAM,GAAGJ,SAAS,EAAtB;AACA,MAAIK,MAAM,GAAGC,QAAQ,CAACF,MAAM,CAACC,MAAR,EAAgB,EAAhB,CAArB;AAEA,MAAI,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACJ,MAAD,CAFM,CAAT,CANqC,CASrC;;AAEA,MAAII,OAAO,GAAG,YAAY;AACtB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BN,MAAO,EAAvC,CAA1B;AACA,QAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAL,IAAAA,OAAO,CAACI,IAAD,CAAP;AACH,GAJD;;AAMA,MAAIE,UAAU,GAAG,YAAY;AACzB,UAAMH,KAAK,CAAE,+BAA8BN,MAAO,EAAvC,EAA0C;AACjDU,MAAAA,MAAM,EAAE,KADyC;AAEjDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFwC;AAKjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGZ,IAAL;AAAW,mBAAW,IAAIa,IAAJ;AAAtB,OAAf;AAL2C,KAA1C,CAAX;AAOH,GARD;;AAUA,MAAIC,YAAY,GAAG,MAAM;AACrBP,IAAAA,UAAU;AACVX,IAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,OAAO,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAU,MAAA,QAAQ,EAAGE,CAAD,IAAO;AAAEf,QAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,kBAAQgB,CAAC,CAACC,MAAF,CAASC;AAA5B,SAAD,CAAP;AAA8C,OAA3E;AAA6E,MAAA,KAAK,EAAElB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU;AAA1F;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7CD;;GAAMhB,Q;UACWD,S;;;KADXC,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n// import notes from '../assets/data'\n\nconst NotePage = ({ match, history }) => {\n    let params = useParams()\n    let noteId = parseInt(params.noteId, 10)\n\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n        getNote()\n    }, [noteId])\n    // let note = notes.find(note => note.id === noteId)\n\n    let getNote = async () => {\n        let response = await fetch(`http://127.0.0.1:5000/notes/${noteId}`)\n        let data = await response.json()\n        setNote(data)\n    }\n\n    let updateNote = async () => {\n        await fetch(`http://127.0.0.1:5000/notes/${noteId}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ ...note, 'updated': new Date() })\n        })\n    }\n\n    let handleSubmit = () => {\n        updateNote()\n        history.push('/')\n    }\n\n    return (\n        <div className='note'>\n\n            <div className='note-header'>\n                <h3>\n                    <Link to='/'>\n                        <ArrowLeft onClick={handleSubmit} />\n                    </Link>\n                </h3>\n            </div>\n            <textarea onChange={(e) => { setNote({ ...note, 'body': e.target.value }) }} value={note?.body}></textarea>\n        </div>\n    )\n}\n\nexport default NotePage\n"]},"metadata":{},"sourceType":"module"}